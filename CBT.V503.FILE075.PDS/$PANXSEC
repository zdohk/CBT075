         TITLE '*** SECEXIT - PANEXEC SECURITY EVENT'                   00001
         PRINT NOGEN
***********************************************************************
*  MODULE  -  PANEXEC SECURITY EXIT. ELEMENT AND COMMAND
*             LEVEL VALIDATION VIA INTERFACE TO TOP SECRET
* METHODS  -  USE PSEUDO-DATASET RESOURCE & USE RACHECK TO INVOKE TS *
*   INPUT  -  REGISTER 1 -> PARAMETER LIST                           *
*  OUTPUT  -  RETURN CODE R15=MUST ALWAYS BE 0
*             STATUS RETURNED IN EVENTBLK                               00026
* LKED     -  RENT                                                      00038
* DETAILS  -  BUILD PSEUDO-DSNAME & USE RACHECK                 *
*             MAX LOAD LIBRARY DSN LENGTH IS 20!!!!!!!!!!!      *
* PSEUDO-DSNAME FORMAT:      $PANX.DSNAME.GROUP.ELEMENT               *
***********************************************************************
R0       EQU   0                                                        00158
R1       EQU   1 THE ADDR OF THE PAN PARAMETER LIST
R2       EQU   2    BASE FOR THE EVENT BLOCK
R3       EQU   3    BASE FOR THE EVIRON BLOCK
R4       EQU   4    BASE FOR THE DATA  BLOCK
R5       EQU   5    BASE REGISTER FOR ALL DATA LIST ENTRIES             00163
R6       EQU   6                                                        00164
R7       EQU   7     BASE FOR GETMAINED WORKAREA
R8       EQU   8     ADDR OF DATA-ID NAME
R9       EQU   9     ADDR OF DATA-ITEM VALUE
R10      EQU   10    BAL REG FROM MAIN EVENT
R11      EQU   11    BAL REG TO GETDATA
R12      EQU   12    PROGRAM BASE
R13      EQU   13                                                       00171
R14      EQU   14                                                       00172
R15      EQU   15                                                       00173
*        EXIT PARAMETER LIST                                            00045
EXITPLST DSECT                                                          00047
EXEVENT  DS    A             EVENT -- THE ADDRESS OF THE EVENT BLOCK    00048
EXENVIR  DS    A             ENVIRONMENT -- THE ADDRESS OF THE ENVIRN   00049
EXDATA   DS    A             DATA LIST -- THE ADDRESS OF THE DATA       00051
*                            LIST BLOCK (THE HIGH ORDER BIT IS SET      00052
*                       TO INDICATE THE END OF THE PARAMETER ADDR LIST) 00053
*        EVENT BLOCK                                                    00056
EVENTBLK DSECT                                                          00058
EVEVENT  DS    CL8           EVENT-ID -- THE NAME OF THE EVENT          00059
*                            (E.G. INIT,$OPEN000,$EXEC000,TERM ETC...)  00060
EVEXTYPE DS    CL8           EXIT TYPE -- ANY USER EXIT IDENTIFIER      00061
*                            (GIVEN ON THE EXIT TYPE= MACRO OR BLANKS)  00062
EVRESPON DS    CL1        RESPONSE CODE- INITIALLY 'C', SET BY EXIT TO: 00063
CONTINUE EQU   C'C'          'C' - CONTINUE NORMAL PROCESSING           00065
ABORT    EQU   C'A'          'A' - ABORT PANEXEC PROCESSING             00066
TERMINAT EQU   C'T'          'T' - TERMINATE THIS EXIT                  00067
*                      SEE MANUAL CHAPTER 12 'EXITS' FOR DETAILS        00068
VERIFY   EQU   C'V'          'V' - ACTIVATE VERIFICATION                00082
*                                  (VALID ONLY FROM THE INIT EVENT;     00083
*                                  SEE THE INIT EVENT FOR DETAILS)      00084
         DS    CL3           RESERVED                                   00085
EVUSER   DS    F             USER FULLWORD -- INITIALLY ZEROES; TO BE   00086
*                            USED BY USER AS DESIRED (E.G. ADDRESS OF   00087
*                            A WORK AREA ETC...); THIS FIELD IS UNIQUE  00088
*                            TO EACH EXIT DEFINED BY A EXIT MACRO       00089
*        ENVIRONMENT BLOCK                                              00091
ENVIRBLK DSECT                                                          00093
ENPRODID DS    CL10          PRODUCT NAME -- VALUE IS ALWAYS "PANEXEC"  00094
ENPRODOP DS    CL10          PRODUCT OPTION -- VALUE IS ALWAYS BLANK    00095
ENPRODVR DS    CL4           PRODUCT VERSION -- THE RELEASE OF THE      00096
*                            PRODUCT (I.E. PANEXEC 5.0 = "0500")        00097
ENOPSYS  DS    CL10          OPERATING SYSTEM -- THE OPERATING SYSTEM   00098
*  UNDER WHICH PRODUCT IS RUNNING ("OS/MVS" OR "OS/VS1" OR "OS/MVS/XA") 00100
ENDCMON  DS    CL10          DC MONITOR -- VALUE IS BLANK OR "CICS"     00101
ENDBMGR  DS    CL10          DB MANAGER -- VALUE IS ALWAYS BLANK        00102
         DS    XL2           RESERVED                                   00103
ENDCPARM DS    A             ADDRESS OF CICS ENVIRONMENT BLOCK OR ZERO  00104
ENDBPARM DS    A             ALWAYS ZEROES                              00105
*                                                                       00106
*        DATA LIST BLOCK                                                00107
DATALIST DSECT                                                          00109
DLCOUNT  DS    F             DATA LIST COUNT -- THE NUMBER OF DATA      00110
*                            LIST ENTRIES (0 TO N) FOLLOWING:           00111
DLFIRST  DS    0X            FIRST DATA LIST ENTRY                      00112
*        DATA LIST ENTRY                                                00114
DLENTRY  DSECT               DATA LIST ENTRY:                           00116
DLEID    DS    CL8           DATA ID -- THE NAME OF THE DATA ITEM       00117
*                            (E.G. ELEMFILE, JOBNAME ETC...)            00118
DLESTAT  DS    CL1           DATA ITEM STATUS -- VALUES ARE:            00119
ACTIVE   EQU   C'A'          'A' - ACTIVE                               00120
INACTIVE EQU   C'I'          'I' - INACTIVE                             00121
         DS    CL3           RESERVED                                   00122
DLEITEM  DS    A             DATA ITEM ADDRESS -- THE ADDR OF THE ITEM  00123
DLENEXT  DS    0X            BEGINNING OF NEXT ENTRY                    00125
*                                                                       00126
*        PANEXEC ELEMENT NAME                                           00127
DATA0000 DSECT                                                          00129
ELEMNAME DS    CL8                                                      00130
*        PANEXEC ELEMENT MODE                                           00132
DATA0001 DSECT                                                          00134
ELEMMODE DS    CL8                                                      00135
*        LIBRARY VOLUME SERIAL                                          00137
DATA0002 DSECT                                                          00139
LIBVOL   DS    CL6                                                      00140
*        PANEXEC FUNCTION                                               00142
DATA0003 DSECT                                                          00144
FUNCTION DS    CL8                                                      00145
*        PANVALET ELEMENT MODE                                          00147
DATA0004 DSECT                                                          00149
PVMODE   DS    CL2                                                      00150
DISABLED EQU   C'D'    PANVALET ELEMENT STATUS EQUATE                   00152
*                                                                       00155
         TITLE '*** SECEXIT <==> PROCESSING ***'                        00174
SECEXIT  CSECT                                                          00175
         SAVE  (14,12),T,*                                              00179
         LR    R12,R15        BASE REG=R12                              00183
         USING SECEXIT,R12    SET UP ADDRESSABILITY                     00184
         USING EXITPLST,R1                                              00188
         L     R2,EXEVENT                                               00189
         USING EVENTBLK,R2                                              00190
         L     R3,EXENVIR                                               00191
         USING ENVIRBLK,R3                                              00192
         L     R4,EXDATA                                                00193
         USING DATALIST,R4                                              00194
         USING DLENTRY,R5                                               00198
* IF EVENT = 'INIT'                                                     00200
         CLC   EVEVENT,=CL8'INIT'                                       00202
         BNE   GETWKADR                                                 00203
         GETMAIN R,LV=LWORK   YES - GETMAIN A WORK AREA  <========      00207
         LR    R6,R1    STORE THE SAVE AREA ADDRESS IN THE EVENT BLOCK  00211
         ST    R6,EVUSER                                                00212
         B     LINKSAVE                                                 00213
*     GET ADDRESS OF EXIT SAVE AREA STORED IN THE EVENT BLOCK           00219
GETWKADR L     R6,EVUSER                                                00221
*                                                                       00223
* LINK EXIT SAVE AREA TO SAVE AREA CHAIN                                00227
LINKSAVE ST    R6,8(R13)                                                00229
         ST    R13,4(R6)                                                00230
* SET NEW SAVE AREA AS THE CURRENT SAVE AREA                            00232
         LR    R13,R6                                                   00234
         LR    R7,R6        SET UP R7 AS BASE OF THE GETMAINED WORKAREA 00234
         USING WORKAREA,R7                                              00234
* IF EVENT = '$EXEC000'                                                 00236
         CLC   EVEVENT,=CL8'$EXEC000'                                   00238
         BNE   CHKELEM0                                                 00239
         BAL   R11,$EXEC000                                             00243
*        FETCH DOES NOT WORK FOR PSEUOD-DATASETS                        00243
*        MVI   TSSACC,$AFETCH   MOVE IN FETCH ACCESS CODE
*        BAL   R11,TSSCHECK     CHECK FOR TOP SECRET ACCESS             00243
         B     RSETSAVE                                                 00244
*                                                                       00269
CHKELEM0 CLC   EVEVENT,=CL8'$ELEM000'                                   00274
         BNE   CHKELEM1                                                 00275
         BAL   R11,$ELEM000                                             00279
         LA    R8,=CL8'PENDACT'   GET PENDING ACTION
         BAL   R10,GETDATA
         MVI   TSSACC,$AREAD    SET READ ACCESS AS DEFAULT
         CLI   0(R9),C'W'       IS ACCESS WRITE
         BNE   DOTSSCHK             NO
         MVI   TSSACC,$AUPDATE  YES-UPDATE
DOTSSCHK BAL   R11,TSSCHECK     CHECK FOR TOP SECRET ACCESS             00243
         B     RSETSAVE                                                 00280
*                                                                       00281
CHKELEM1 CLC   EVEVENT,=CL8'$ELEM001'                                   00286
         BNE   CHKCMND0                                                 00287
         BAL   R11,$ELEM001                                             00243
         MVI   TSSACC,$AREAD    MOVE IN READ ACCESS CODE
         BAL   R11,TSSPANCK     CHECK FOR TOP SECRET ACCESS             00243
         B     RSETSAVE                                                 00292
*                                                                       00293
CHKCMND0 CLC   EVEVENT,=CL8'$CMND000'                                   00298
         BNE   RSETSAVE                                                 00299
         BAL   R11,$CMND000                                             00303
         B     RSETSAVE                                                 00304
* RESET CALLER'S SAVE AREA AS THE CURRENT SAVE AREA                     00310
RSETSAVE LR    R6,R13                                                   00312
         L     R13,4(R6)                                                00313
* REMOVE EXIT SAVE AREA FROM THE SAVE AREA CHAIN                        00315
         XC    8(4,R13),8(R13)                                          00317
         XC    4(4,R6),8(R6)                                            00318
         CLC   EVEVENT,=CL8'TERM'                                       00322
         BNE   RETURN                                                   00323
         FREEMAIN R,LV=LWORK,A=(R7)    FREE GETMAINED WORKAREA          00327
         XR    R7,R7                                                    00328
         ST    R7,EVUSER                                                00329
RETURN   RETURN (14,12),T,RC=0                                          00338
         TITLE '*** SECEXIT <==> INTERNAL SUBROUTINES ***'              00339
* SUBROUTINE DISALLOWS EXECUTION OF INACTIVE OR DISABLED ELEMENTS       00345
* GET MODE OF ELEMENT TO BE EXECUTED                                    00349
$EXEC000 LA    R8,=CL8'ELEMMODE'                                        00351
         BAL   R10,GETDATA                                              00352
         USING ELEMMODE,R9                                              00353
* IF ELEMENT MODE IS INACTIVE OR DISABLED                               00355
         CLI   ELEMMODE,INACTIVE                                        00357
         BE    INACXELM                                                 00358
         CLI   ELEMMODE,DISABLED                                        00359
         BNER  R11                                                      00360
*     INACTIVATE ELEMENT MODE TO DISALLOW EXECUTION                     00364
INACXELM MVI   DLESTAT,INACTIVE                                         00366
         BR    R11                                                      00374
*                                                                       00376
* SUBROUTINE ALLOWS ACCESS TO ANY ELEMENT THRU DIRSTAT COMMAND          00376
* SUBROUTINE DISALLOWS REMOVAL OF ACTIVE ELEMENTS FROM A PANEXEC LIB    00447
* GET CURRENT COMMAND BEING EXECUTED                                    00452
$ELEM000 LA    R8,=CL8'FUNCTION'                                        00454
         BAL   R10,GETDATA                                              00455
         USING FUNCTION,R9                                              00456
* IF CURRENT COMMAND IS REMOVE                                          00458
         CLC   FUNCTION,=CL8'DIRSTAT'   IF COMMAND IS DIRSTAT           00460
         BE    RSETSAVE                 ACCESS IS OK - EXIT             00461
         CLC   FUNCTION,=CL8'REMOVE'                                    00460
         BNER  R11                                                      00461
*     GET MODE OF ELEMENT BEING REMOVED                                 00463
         LA    R8,=CL8'ELEMMODE'                                        00465
         BAL   R10,GETDATA                                              00466
         USING ELEMMODE,R9                                              00467
*     IF ELEMENT MODE IS ACTIVE                                         00469
         CLI   ELEMMODE,ACTIVE                                          00471
         BNER  R11                                                      00472
*   INACTIVATE ELEMENT MODE TO DISALLOW REMOVE OF ACTIVE ELEMENT        00474
         MVI   DLESTAT,INACTIVE                                         00476
         BR    R11                                                      00486
*                                                                       00488
* SUBROUTINE DISALLOWS WRITING OF INACTIVE OR DISABLED ELEMENTS FROM    00493
* A PANVALET LIBRARY                                                    00494
* GET CURRENT COMMAND BEING EXECUTED                                    00498
$ELEM001 LA    R8,=CL8'FUNCTION'                                        00500
         BAL   R10,GETDATA                                              00501
         USING FUNCTION,R9                                              00502
* IF CURRENT COMMAND IS WRITE                                           00504
         CLC   FUNCTION,=CL8'WRITE'                                     00506
         BNER  R11                                                      00507
*     GET MODE OF ELEMENT BEING REMOVED                                 00509
         LA    R8,=CL8'PVMODE'                                          00511
         BAL   R10,GETDATA                                              00512
         USING PVMODE,R9                                                00513
*     IF ELEMENT MODE IS INACTIVE OR DISABLED                           00515
         CLI   PVMODE,INACTIVE                                          00517
         BE    INACPELM                                                 00518
         CLI   PVMODE+1,DISABLED                                        00519
         BNER  R11                                                      00520
*    INACTIVATE ELEMENT MODE TO DISALLOW REMOVE OF ACTIVE ELEMENT       00524
INACPELM MVI   DLESTAT,INACTIVE                                         00526
         BR    R11                                                      00536
*                                                                       00538
* SUBROUTINE DISALLOWS USE OF THE FILEOPT, CREATE AND STATUS COMMAND    00543
* AND THE ACCESS, ALTER AND OVERRIDE SECURITY COMMANDS                  00543
* FOR THOSE WHO DO NOT HAVE UPDATE ACCESS TO THE PANESRL LIBRARY.
* GET CURRENT COMMAND BEING EXECUTED                                    00548
$CMND000 LA    R8,=CL8'ELEMNAME'                                        00550
         BAL   R10,GETDATA                                              00551
         USING ELEMNAME,R9                                              00552
         CLC   ELEMNAME,=CL8'FILEOPT'  IS CMD = FILEOPT                 00556
         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557
         CLC   ELEMNAME,=CL8'STATUS'  IS CMD = STATUS                   00556
         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557
         CLC   ELEMNAME,=CL8'CREATE'   IS CMD = CREATE                  00556
         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557
         CLC   ELEMNAME,=CL8'ACCESS'   IS CMD = ACCESS                  00556
         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557
         CLC   ELEMNAME,=CL8'ALTER'    IS CMD = ALTER                   00556
         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557
         CLC   ELEMNAME,=CL8'OVERRIDE' IS CMD = OVERRIDE                00556
         BNER  R11                     NO - OK                          00557
CMNDCHK  MVI   TSSACC,$AUPDATE         MOVE IN UPDATE ACC CODE
         BAL   R10,TSSCHECK            YES - CHECK IF ALLOWED
         BR    R11                                                      00569
*                                                                       00571
GETDATA  DS    0H  GET DATA ITEM FROM THE DATA LIST                     00583
* INVOCATION SEQUENCE: R8 --> DATA LIST IDENTIFIER (CL8)                00574
*                      BAL   R10,GETDATA                                00575
*                      R5 --> DATA LIST ENTRY                           00576
*                      R9 --> DATA VALUE                                00577
* IF THE DATA ID IS NOT FOUND (INDICATING AN INTERNAL ERROR IN THE      00579
* EXIT), THIS SUBROUTINE WILL SET THE RESPONSE CODE AS "ABORT" AND      00580
* RETURN DIRECTLY TO THE MAINLINE ROUTINE VIA R11                       00581
*                                                                       00582
* GET FIRST ENTRY IN THE DATA LIST                                      00585
         L     R6,DLCOUNT                                               00587
         LA    R5,DLFIRST                                               00588
* DO WHILE ENTRIES TO BE SEARCHED AND DATA ID NOT FOUND                 00592
CHKNEXT  LTR   R6,R6                                                    00594
         BZ    CHKSRCH                                                  00595
         CLC   DLEID,0(R8)                                              00596
         BE    CHKSRCH                                                  00597
*     GET NEXT ENTRY IN THE DATA LIST                                   00599
         LA    R5,DLENEXT                                               00601
         BCTR  R6,R0                                                    00602
         B     CHKNEXT                                                  00603
*                                                                       00606
* IF DATA ID FOUND                                                      00609
CHKSRCH  LTR   R6,R6                                                    00611
         BZ    NOTFOUND                                                 00612
*     POINT R9 AT THE DATA ITEM VALUE                                   00614
         L     R9,DLEITEM                                               00616
         BR    R10                                                      00620
         SPACE 3
TSSCHECK MVC   PSEUDONM,$PANX      ---------> SET $PANX. IN PSEUDONM
         LA    R8,=CL8'LIBNAME'   GET LIBRARY DSN
         BAL   R10,GETDATA
         MVC   PSEUDONM+6(44-6),0(R9)  -----> $PANX.DSNAME
         LA    R8,=CL8'ELEMGRP'          GET ELEMNT GRP NAME
         BAL   R10,GETDATA
         TRT   PSEUDONM(44-9),FINDEND    FIND END OF DSNAME
         BZ    TOOLONG     IF DSN WAS TOO LARGE- CHK HIGH QUALIF ONLY
         MVI   0(R1),C'.'          -------------> $PANX.DSN.
         MVC   1(8,R1),0(R9)       -------------> $PANX.DSN.GRPNAME
         LA    R8,=CL8'ELEMNAME'         GET ELEMNT NAME
RACHK1   BAL   R10,GETDATA
         TRT   PSEUDONM(44-9),FINDEND    FIND END OF GRPNAME(DSN)
         BZ    TOOLONG IF $PANX.DSN.GRPNM TOO LARGE-CHK HIGH QUALIF ONY
         MVI   0(R1),C'.'    --> $PANX.DSN.GRPNAME.($PAN.DSN.)
         MVC   1(8,R1),0(R9) --> $PANX.DSN.GRPNAME.ELEMNAME($PAN..MEMB)
TOOLONG  EQU   *
         MVC   DATASETX(9),XDATASET X'09',C'DATASETX' FOLLOWD BY ACCESS
         MVC   FEEDBACK,XFEEDB     INIT 16-BYTE FEEDBACK AREA
         MVC   RACHECK,RACKLIST    MOVE RACHECK SKELETON
         MVC   TSSVOL,=C'PANEXE'     FILL IN PHONY VOLSER 'PANEXE'
         RACHECK CLASS=DATASETX,ENTITY=PSEUDONM,VOLSER=TSSVOL,         .
               INSTLN=FEEDBACK,MF=(E,RACHECK)
*              CODE LOG=NOSTAT ON THE RACHECK FOR NO TSS VIOLAT LOGGING
         LTR   R15,R15             RETURN CODE FROM TOP SECRET
         BZR   R11                 BR IF ZERO
         MVI   DLESTAT,INACTIVE  NO- SET MEMBER STATUS TO I(INACTIVE)
*        RESPONSE CODE IS ALREADY SET TO C TO CONTINUE BUT CURRENT
*        FUNCTION (MEMBER ACCESS) TERMINATES WITH A SECURITY VIOLATION
         BR    R11
*                                                                       00623
TSSPANCK MVC   PSEUDONM,$PAN       ---------> SET $PAN. IN PSEUDONM
         LA    R8,=CL8'LIBNAME'   GET LIBRARY DSN
         BAL   R10,GETDATA
         MVC   PSEUDONM+5(44-9-5),0(R9)  -----> $PAN.DSN
         LA    R8,=CL8'SUPERSET'         GET MEMBER NAME
         B     RACHK1                    AND USE TSSCHECK RTN
*                                                                       00623
*     SET RESPONSE CODE AS ABORT                                        00626
NOTFOUND MVI   EVRESPON,ABORT                                           00628
         BR    R11                                                      00632
         SPACE 2
RACKLIST RACHECK  MF=L
XFEEDB   DC    C'TSSF',X'10',XL11'00'
XDATASET DC    X'09',C'DATASETX'  THIS MOVED TO 1ST 9 BYTES OF DATASETX
$PAN     DC    CL44'$PAN.'       FIXED $PAN. PREFIX
$PANX    DC    CL44'$PANX.'       FIXED $PANX. PREFIX
FINDEND  DC    256X'00'            TRANSLATE TABLE
         ORG   FINDEND+C' '        TO LOCATE
         DC    X'FF'               END OF DSNAME
         ORG   FINDEND+256         (FIRST BLANK)
         LTORG                                                          00637
         SPACE 4
WORKAREA DSECT
SAVEAREA DS    18F     REGISTER SAVE AREA-MUST BE FIRST ITEM IN DSECT
PSEUDONM DS    CL44             PSEUDO DSNAME
         DS    CL8      SLACK IN CASE PSEUDO-NAME IS TOO LONG
TSSVOL   DS    CL6              VOLUME SERIAL
DATASETX DS    CL9  -XDATASET   CLASSNAME-THIS FIELD & TSSACC CONTIG
TSSACC   DS    X                ACCESS LEVEL: UPDATE=X'60' READ=X'40'
*
RACHECK  DS    CL32             RACHECK AREA
FEEDBACK DS    XL16           FEEDBACK:
LWORK    EQU   *-WORKAREA
         SPACE 4
$AFETCH  EQU   X'80'              FETCH-ONLY
$AREAD   EQU   X'40'              READ
$AWRITE  EQU   X'20'              WRITE-ONLY
$AUPDATE EQU   $AREAD+$AWRITE     I-O (UPDATE)
$ACREATE EQU   X'10'              CREATE
$ASCRTCH EQU   X'08'              SCRATCH
$ANONE   EQU   X'00'              NO ACCESS
$AALL    EQU   X'FF'              EVERYTHING
         END
